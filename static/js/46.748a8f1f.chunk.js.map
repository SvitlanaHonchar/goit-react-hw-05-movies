{"version":3,"file":"static/js/46.748a8f1f.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","sevices.api/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return <StyledLink to={to}>{children}</StyledLink>;\n};\n","import React from 'react';\n// import { requestMoviesGenres } from 'sevices.api/api';\n// import { useState } from 'react';\n\nconst MovieCard = ({ movie }) => {\n  const releaseYear = parseInt(movie.release_date);\n  //   const [genres, setGenres] = useState({});\n\n  //   useEffect(() => {\n  //     const fetchMoviesGenres = async () => {\n  //       try {\n  //         const { genres } = await requestMoviesGenres();\n  //         // console.log(genres);\n  //         const updateGenres = genres.reduce((acc, item) => {\n  //           return { ...acc, [item.id]: item.name };\n  //         }, {});\n  //         console.log('updateGenres: ', updateGenres);\n  //         setGenres(updateGenres);\n  //       } catch (error) {\n  //         console.log(error);\n  //       }\n  //     };\n  //     fetchMoviesGenres();\n  //   }, []);\n  //   console.log('movie: ', movie);\n  return (\n    <div>\n      <h2>\n        {movie.title} ({releaseYear})\n      </h2>\n      <p>User Score: {movie.vote_average}</p>\n      <p>Overview: {movie.overview}</p>\n      <p>Genres: {movie?.genres?.map(genre => genre.name).join(', ')}</p>\n      <img\n        src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n        alt={movie.overview}\n        width=\"200\"\n      />\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React, { useState, useEffect, Suspense, lazy } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { requestMoviesById } from 'sevices.api/api';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport MovieCard from 'components/MovieCard/MovieCard';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nconst MovieDetails = () => {\n  const { id: movieId } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    fetchMoviesById(movieId);\n  }, [movieId]);\n\n  const fetchMoviesById = async movieId => {\n    try {\n      const data = await requestMoviesById(movieId);\n      // console.log(data);\n      setMovie(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <BackLink to={location?.state?.from ?? '/'}>Go back</BackLink>\n\n      <MovieCard movie={movie} />\n\n      <NavLink state={{ from: location?.state?.from }} to=\"cast\">\n        Cast\n      </NavLink>\n      <NavLink state={{ from: location?.state?.from }} to=\"reviews\">\n        Reviews\n      </NavLink>\n\n      <Suspense>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />}></Route>\n          <Route path=\"reviews\" element={<Reviews />}></Route>\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '520b1f5cc874bee72fc625fe9511a989';\n\nexport const requestSearchedMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const requestTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMoviesById = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesCredits = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const requestMoviesReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n\n// export const requestMoviesGenres = async movieId => {\n//   const { data } = await axios.get(\n//     `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n//   );\n\n//   return data;\n// };\n"],"names":["StyledLink","styled","Link","BackLink","to","children","movie","releaseYear","parseInt","release_date","title","vote_average","overview","genres","map","genre","name","join","src","poster_path","alt","width","Cast","lazy","Reviews","movieId","useParams","id","location","useLocation","useState","setMovie","useEffect","fetchMoviesById","requestMoviesById","data","console","log","state","from","Suspense","path","element","API_KEY","requestSearchedMovies","query","axios","requestTrendingMovies","requestMoviesCredits","requestMoviesReviews"],"sourceRoot":""}