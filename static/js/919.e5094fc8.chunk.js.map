{"version":3,"file":"static/js/919.e5094fc8.chunk.js","mappings":"wQA6BA,EA1BiB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YAClB,OACE,+BACE,wBACGA,EAAYC,KAAI,SAAAC,GACf,OACE,2BACE,wBAAKA,EAAWC,QAChB,uBAAID,EAAWE,YACc,OAA5BF,EAAWG,cACV,gBAAKC,IAAKC,EAAcC,IAAI,QAAQC,MAAM,SAE1C,gBACEH,IAAG,8CAAyCJ,EAAWG,cACvDG,IAAKN,EAAWE,UAChBK,MAAM,UATHP,EAAWQ,GAcvB,OAIR,ECSD,EA9Ba,WACX,IAAYC,GAAYC,EAAAA,EAAAA,MAAhBF,GAER,GAAsCG,EAAAA,EAAAA,UAAS,IAA/C,eAAOb,EAAP,KAAoBc,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAmBL,EACpB,GAAE,CAACA,IAEJ,IAAMK,EAAkB,mCAAG,WAAML,GAAN,mGAEAM,EAAAA,EAAAA,IAAqBN,GAFrB,gBAEfO,EAFe,EAEfA,KAERJ,EAAeI,GAJQ,gDAMvBC,QAAQC,IAAR,MANuB,yDAAH,sDAUxB,OACE,8BACGpB,EAAYqB,OAAS,GACpB,SAAC,EAAD,CAAUrB,YAAaA,KAEvB,kDAIP,C","sources":["components/CastList/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["import React from 'react';\nimport emptypicture from '../../images/emptypicture.png';\n\nconst CastList = ({ castMembers }) => {\n  return (\n    <>\n      <ul>\n        {castMembers.map(castMember => {\n          return (\n            <li key={castMember.id}>\n              <h3>{castMember.name}</h3>\n              <p>{castMember.character}</p>\n              {castMember.profile_path === null ? (\n                <img src={emptypicture} alt=\"empty\" width=\"150\" />\n              ) : (\n                <img\n                  src={`https://image.tmdb.org/t/p/original/${castMember.profile_path}`}\n                  alt={castMember.character}\n                  width=\"150\"\n                />\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default CastList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestMoviesCredits } from 'sevices.api/api';\nimport CastList from 'components/CastList/CastList';\n// import emptypicture from '../images/emptypicture.png';\n\nconst Cast = () => {\n  const { id: movieId } = useParams();\n\n  const [castMembers, setCastMembers] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesCredits(movieId);\n  }, [movieId]);\n\n  const fetchMoviesCredits = async movieId => {\n    try {\n      const { cast } = await requestMoviesCredits(movieId);\n      // console.log(cast);\n      setCastMembers(cast);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      {castMembers.length > 0 ? (\n        <CastList castMembers={castMembers} />\n      ) : (\n        <p>no cast for the movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["castMembers","map","castMember","name","character","profile_path","src","emptypicture","alt","width","id","movieId","useParams","useState","setCastMembers","useEffect","fetchMoviesCredits","requestMoviesCredits","cast","console","log","length"],"sourceRoot":""}